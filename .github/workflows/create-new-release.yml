# This is a basic workflow to help you get started with Actions

name: Pump release
# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Tag of release branch'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-version-and-create-branch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.inputs.release-tag }}
          regex: '^\d+\.\d+\.\d+$'
      - name: Check branch name
        if: steps.regex-match.outputs.match == ''
        run: echo "Given release tag wrong, quit." && exit 1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: actions/checkout@master
      - name: Update version
        run: echo ${{ github.event.inputs.release-tag }} > 'cfmUtils/VERSION'
      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          author_name: Xiaosu Zhu
          author_email: xiaosu.zhu@outlook.com
          message: "Pump version to ${{ github.event.inputs.release-tag }}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: r${{ github.event.inputs.release-tag }}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
  test-n-build-publish:
    needs: [check-version-and-create-branch]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@master
        with:
          ref: r${{ github.event.inputs.release-tag }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Test
        run: echo "Test"
      - name: Make, build, package
        run: make all ARGS="--branch r${{ github.event.inputs.release-tag }}"
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: README.md
          files: dist/*
          fail_on_unmatched_files: true
          tag_name: r${{ github.event.inputs.release-tag }}
          name: Release ${{ github.event.inputs.release-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
